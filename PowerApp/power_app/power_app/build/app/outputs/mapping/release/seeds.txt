androidx.window.embedding.SplitPlaceholderRule
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
io.flutter.plugins.firebase.database.FlutterFirebaseAppRegistrar
kotlinx.coroutines.internal.StackTraceRecoveryKt
androidx.window.layout.WindowMetricsCalculator$Companion
androidx.window.layout.FoldingFeature
androidx.window.layout.ExtensionWindowLayoutInfoBackend
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
androidx.window.embedding.SplitController
androidx.annotation.Keep
androidx.window.layout.WindowMetricsCalculator
androidx.versionedparcelable.ParcelImpl
com.google.firebase.database.DatabaseRegistrar
androidx.window.layout.WindowInfoTrackerImpl$Companion
androidx.window.embedding.EmbeddingRule
androidx.window.layout.WindowInfoTracker$Companion
androidx.window.R$id
androidx.window.layout.SidecarCompat$FirstAttachAdapter
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
androidx.window.R$attr
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
com.google.android.gms.auth.api.signin.GoogleSignInAccount
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
com.google.android.gms.common.util.DynamiteApi
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.google.firebase.installations.ktx.FirebaseInstallationsKtxRegistrar
androidx.window.embedding.SplitPairRule
com.google.android.gms.common.GooglePlayServicesManifestException
androidx.window.layout.DisplayCompatHelperApi17
androidx.activity.ComponentActivity$3
kotlin.coroutines.jvm.internal.BaseContinuationImpl
androidx.window.layout.HardwareFoldingFeature
androidx.window.java.R
androidx.window.layout.WindowMetricsCalculatorDecorator
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
androidx.window.layout.SidecarCompat
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
io.flutter.view.TextureRegistry$ImageTextureEntry
androidx.window.layout.ActivityCompatHelperApi24
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.window.embedding.SplitPairFilter
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
io.flutter.embedding.engine.FlutterOverlaySurface
com.google.android.gms.common.api.Status
androidx.window.embedding.EmbeddingBackend
androidx.window.embedding.ActivityRule
androidx.fragment.app.Fragment$2
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
androidx.core.app.CoreComponentFactory
androidx.window.R$styleable
androidx.window.layout.SidecarCompat$TranslatingCallback
androidx.window.embedding.ActivityFilter
androidx.window.embedding.EmbeddingInterfaceCompat
androidx.window.layout.SidecarCompat$DistinctElementCallback
com.google.android.gms.measurement.AppMeasurementJobService
androidx.window.layout.FoldingFeature$State$Companion
com.google.android.gms.measurement.AppMeasurementService
androidx.window.layout.FoldingFeature$OcclusionType$Companion
androidx.window.embedding.EmbeddingTranslatingCallback
androidx.window.embedding.EmbeddingCompat
io.flutter.view.AccessibilityViewEmbedder
androidx.versionedparcelable.CustomVersionedParcelable
androidx.window.layout.SidecarCompat$Companion
androidx.window.layout.DisplayCompatHelperApi28
android.support.v4.graphics.drawable.IconCompatParcelizer
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
android.support.v4.app.RemoteActionCompatParcelizer
com.google.firebase.ktx.FirebaseCommonKtxRegistrar
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.window.layout.HardwareFoldingFeature$Type
com.google.firebase.database.FirebaseDatabaseKtxRegistrar
androidx.window.layout.DisplayFeature
androidx.window.embedding.SplitRule$Api30Impl
androidx.savedstate.SavedStateRegistry$1
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
io.flutter.embedding.engine.FlutterJNI
androidx.core.app.RemoteActionCompat
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
androidx.window.layout.ExtensionInterfaceCompat
androidx.activity.ImmLeaksCleaner
androidx.window.embedding.SplitRuleParser
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
androidx.window.layout.WindowMetrics
com.google.firebase.installations.FirebaseInstallationsRegistrar
androidx.window.embedding.EmbeddingCompat$Companion
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
androidx.window.layout.ActivityCompatHelperApi30
androidx.window.layout.WindowMetricsCalculatorCompat
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
androidx.window.core.Version
androidx.window.layout.WindowInfoTracker
androidx.window.embedding.ExtensionEmbeddingBackend
androidx.window.layout.EmptyDecorator
com.google.android.gms.common.annotation.KeepName
androidx.window.embedding.EmptyEmbeddingComponent
androidx.window.layout.FoldingFeature$Orientation
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
androidx.window.layout.SidecarAdapter$Companion
com.google.android.gms.common.api.internal.LifecycleCallback
com.google.firebase.components.ComponentDiscoveryService
com.google.firebase.components.ComponentRegistrar
androidx.window.layout.WindowInfoTrackerImpl
com.google.firebase.FirebaseCommonRegistrar
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
androidx.window.core.Bounds
com.google.android.gms.common.internal.ReflectedParcelable
com.google.firebase.provider.FirebaseInitProvider
androidx.window.layout.FoldingFeature$Orientation$Companion
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
androidx.core.graphics.drawable.IconCompat
androidx.window.embedding.MatcherUtils
androidx.window.core.ExperimentalWindowApi
com.google.android.gms.common.api.internal.BasePendingResult
androidx.window.embedding.SplitInfo
androidx.window.embedding.EmbeddingAdapter
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
androidx.window.layout.SidecarAdapter
androidx.lifecycle.Lifecycling$1
androidx.lifecycle.CompositeGeneratedAdaptersObserver
io.flutter.plugins.GeneratedPluginRegistrant
kotlinx.coroutines.android.AndroidDispatcherFactory
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
io.flutter.view.FlutterCallbackInformation
androidx.window.layout.FoldingFeature$State
androidx.window.embedding.ActivityStack
com.google.firebase.database.ktx.FirebaseDatabaseKtxRegistrar
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.window.layout.WindowLayoutInfo
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.window.layout.HardwareFoldingFeature$Companion
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
androidx.window.core.Version$Companion
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
com.google.firebase.FirebaseCommonKtxRegistrar
com.google.android.gms.measurement.AppMeasurementReceiver
com.google.android.gms.common.api.GoogleApiActivity
androidx.core.app.RemoteActionCompatParcelizer
androidx.window.R
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry
com.google.firebase.concurrent.ExecutorsRegistrar
androidx.window.core.Version$bigInteger$2
androidx.window.layout.HardwareFoldingFeature$Type$Companion
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.google.firebase.installations.FirebaseInstallationsKtxRegistrar
androidx.window.layout.WindowInfoTrackerDecorator
androidx.window.embedding.SplitRule$LayoutDir
com.google.android.gms.measurement.AppMeasurement
androidx.window.layout.SidecarWindowBackend$Companion
androidx.window.layout.FoldingFeature$OcclusionType
androidx.window.layout.SidecarWindowBackend
androidx.window.embedding.SplitController$Companion
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
com.example.power_app.MainActivity
androidx.activity.ComponentActivity$2
com.google.firebase.analytics.FirebaseAnalytics
androidx.window.embedding.SplitRule
androidx.savedstate.Recreator
androidx.window.layout.WindowBackend
io.flutter.plugin.platform.SingleViewPresentation
com.google.android.gms.common.api.Scope
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
com.google.android.gms.internal.measurement.zzfy$zzf: com.google.android.gms.internal.measurement.zzfy$zzf zzc
androidx.window.embedding.SplitInfo: float splitRatio
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
androidx.window.R$styleable: int ActivityFilter_activityName
com.google.android.gms.internal.measurement.zzfy$zzk: int zzai
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.google.android.gms.internal.measurement.zzgd$zzd: com.google.android.gms.internal.measurement.zzkc zzg
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
com.google.android.gms.internal.measurement.zzfo$zzd: boolean zzg
com.google.android.gms.internal.measurement.zzdw: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.internal.zzbf: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfr$zzg: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfr$zza$zzf: com.google.android.gms.internal.measurement.zzfr$zza$zzf zzc
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
com.google.android.gms.internal.measurement.zzgd$zzd: boolean zzj
com.google.android.gms.internal.measurement.zzfr$zza$zza: int zzg
com.google.android.gms.internal.measurement.zzfy$zzn: com.google.android.gms.internal.measurement.zzll zzd
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
com.google.android.gms.internal.measurement.zzfy$zzo: double zzk
androidx.window.embedding.ActivityRule: java.util.Set filters
com.google.android.gms.internal.measurement.zzfr$zzd: java.lang.String zzg
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
com.google.android.gms.internal.measurement.zzfr$zza$zzf: java.lang.String zzf
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
com.google.android.gms.internal.measurement.zzfy$zzd: com.google.android.gms.internal.measurement.zzfy$zzm zzg
com.google.android.gms.internal.measurement.zzfr$zzf: int zze
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
com.google.android.gms.internal.measurement.zzfr$zzi: com.google.android.gms.internal.measurement.zzfr$zzi zzc
androidx.window.layout.SidecarCompat: java.lang.String TAG
com.google.android.gms.internal.measurement.zzfy$zzk: long zzav
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
com.google.android.gms.internal.measurement.zzfy$zzm: com.google.android.gms.internal.measurement.zzll zzd
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.google.android.gms.internal.measurement.zzfy$zzi: com.google.android.gms.internal.measurement.zzfy$zzi zzc
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzkc zzo
com.google.android.gms.internal.measurement.zzfr$zzd: long zzf
com.google.android.gms.internal.measurement.zzfy$zzc: int zze
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfy$zzk: long zzw
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
androidx.window.core.Version: int minor
com.google.android.gms.internal.measurement.zzfy$zzk: int zzaj
com.google.android.gms.internal.measurement.zzfo$zze: java.lang.String zzg
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.google.android.gms.internal.measurement.zzfy$zzk: long zzk
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzfy$zza zzbp
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzbf
com.google.android.gms.internal.measurement.zzfy$zzd: com.google.android.gms.internal.measurement.zzfy$zzd zzc
com.google.android.gms.internal.measurement.zzfo$zza: int zzf
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzy
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
kotlinx.coroutines.CancelledContinuation: int _resumed
com.google.android.gms.internal.measurement.zzfo$zze: int zzf
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
com.google.android.gms.internal.measurement.zzfr$zzb: int zze
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveSegment
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzbd
androidx.window.R$id: int rtl
androidx.window.core.Bounds: int left
com.google.android.gms.internal.measurement.zzfy$zzk: long zzj
com.google.android.gms.internal.measurement.zzfr$zze: com.google.android.gms.internal.measurement.zzfr$zze zzc
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
com.google.android.gms.internal.measurement.zzfy$zzh: com.google.android.gms.internal.measurement.zzfy$zzh zzc
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
com.google.android.gms.internal.measurement.zzfy$zza: long zzm
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
com.google.android.gms.internal.measurement.zzfy$zzk: boolean zzbj
com.google.android.gms.internal.measurement.zzfy$zzi: int zze
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
com.google.android.gms.internal.measurement.zzfy$zza: java.lang.String zzh
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
com.google.android.gms.internal.measurement.zzfy$zza: long zzi
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
com.google.android.gms.internal.measurement.zzfo$zza: com.google.android.gms.internal.measurement.zzfo$zza zzc
com.google.android.gms.measurement.internal.zzbe: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfy$zzk: int zzg
io.flutter.embedding.engine.FlutterJNI: float displayDensity
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
com.google.android.gms.internal.measurement.zzfr$zzi: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfr$zzf: int zzf
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
com.google.android.gms.internal.measurement.zzfy$zzb: com.google.android.gms.internal.measurement.zzfy$zzb zzc
com.google.firebase.database.DatabaseRegistrar: java.lang.String LIBRARY_NAME
com.google.android.gms.common.zzq: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfr$zzg: java.lang.String zzg
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzfy$zzc zzbn
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
com.google.android.gms.internal.measurement.zzgd$zzb: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzkc zzn
com.google.android.gms.internal.measurement.zzfy$zzg: java.lang.String zzf
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
androidx.window.embedding.ActivityStack: java.util.List activities
com.google.android.gms.internal.measurement.zzfy$zzl: com.google.android.gms.internal.measurement.zzkc zzg
com.google.android.gms.internal.measurement.zzfy$zza: java.lang.String zzk
androidx.window.layout.FoldingFeature$State: java.lang.String description
kotlinx.coroutines.channels.BufferedChannel: long bufferEnd
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.android.gms.internal.measurement.zzfy$zzc: boolean zzi
com.google.android.gms.internal.measurement.zzfr$zza$zzf: java.lang.String zzg
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
com.google.android.gms.internal.measurement.zzfy$zzf: com.google.android.gms.internal.measurement.zzkc zzf
kotlin.jvm.internal.FunctionReference: int flags
com.google.android.gms.internal.measurement.zzgd$zzc: com.google.android.gms.internal.measurement.zzgd$zzc zzc
com.google.android.gms.internal.measurement.zzfy$zzb: com.google.android.gms.internal.measurement.zzll zzd
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
androidx.window.core.Bounds: int right
com.google.android.gms.measurement.internal.zzon: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzap
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
com.google.android.gms.internal.measurement.zzgd$zza: com.google.android.gms.internal.measurement.zzll zzd
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
kotlin.jvm.internal.Lambda: int arity
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzfr$zzd zzc
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
com.google.android.gms.internal.measurement.zzfy$zzk: int zzbl
com.google.android.gms.internal.measurement.zzfr$zzh: com.google.android.gms.internal.measurement.zzfr$zzh zzc
com.google.android.gms.internal.measurement.zzfr$zzg: java.lang.String zzf
androidx.window.core.Version: int major
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
com.google.android.gms.internal.measurement.zzfy$zzk: long zzbg
androidx.window.embedding.ActivityStack: boolean isEmpty
androidx.window.R$attr: int placeholderActivityName
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object state
androidx.window.R$attr: int alwaysExpand
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
androidx.window.embedding.SplitController: boolean sDebug
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
androidx.window.R$attr: int finishPrimaryWithSecondary
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.google.android.gms.internal.measurement.zzfo$zzf: com.google.android.gms.internal.measurement.zzfo$zzf zzc
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
com.google.android.gms.internal.measurement.zzfy$zzk: int zzay
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
com.google.android.gms.internal.measurement.zzfy$zzc: boolean zzh
com.google.android.gms.internal.measurement.zzfo$zza: int zze
kotlinx.coroutines.channels.BufferedChannel: long completedExpandBuffersAndPauseFlag
com.google.android.gms.internal.measurement.zzfr$zza: com.google.android.gms.internal.measurement.zzkc zzf
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
com.google.android.gms.internal.measurement.zzfo$zzb: com.google.android.gms.internal.measurement.zzkc zzh
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.internal.zzaj: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitRule: int minWidth
com.google.android.gms.internal.measurement.zzfo$zza: boolean zzj
com.google.android.gms.internal.measurement.zzfy$zzj: java.lang.String zzh
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
kotlinx.coroutines.channels.BufferedChannel: long receivers
androidx.window.layout.SidecarAdapter: java.lang.String TAG
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
com.google.android.gms.internal.measurement.zzfy$zza: int zze
androidx.window.R$styleable: int ActivityRule_alwaysExpand
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
com.google.android.gms.internal.measurement.zzfr$zzf: int zzg
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
com.google.android.gms.internal.measurement.zzfy$zzk: long zzau
com.google.android.gms.internal.measurement.zzfr$zzh: java.lang.String zzf
androidx.window.R$attr: int secondaryActivityName
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
com.google.android.gms.internal.measurement.zzfo$zzf: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfo$zze: boolean zzi
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
com.google.android.gms.internal.measurement.zzfy$zzf: long zzh
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfr$zzd: int zzh
com.google.android.gms.internal.measurement.zzgd$zzd: int zzf
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.google.android.gms.common.internal.zzk: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfo$zzd: com.google.android.gms.internal.measurement.zzfo$zzd zzc
com.google.android.gms.internal.measurement.zzfy$zzk: int zzs
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.android.gms.internal.measurement.zzfr$zzc: com.google.android.gms.internal.measurement.zzfr$zzc zzc
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzv
com.google.android.gms.internal.measurement.zzfy$zzo: long zzf
com.google.android.gms.internal.measurement.zzfy$zzb: java.lang.String zzf
com.google.android.gms.internal.measurement.zzfr$zzd: java.lang.String zzq
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzll zzd
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzr
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
com.google.android.gms.internal.measurement.zzfy$zzo: java.lang.String zzg
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
io.flutter.plugin.platform.SingleViewPresentation: int viewId
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
com.google.android.gms.internal.measurement.zzfr$zzi: int zze
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzad
com.google.android.gms.internal.measurement.zzfy$zzh: java.lang.String zzf
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
com.google.android.gms.internal.measurement.zzfy$zzb: int zze
com.google.android.gms.internal.measurement.zzfr$zzd: boolean zzm
com.google.android.gms.internal.measurement.zzfr$zzi: java.lang.String zzf
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
com.google.android.gms.internal.measurement.zzfo$zza: com.google.android.gms.internal.measurement.zzkc zzg
com.google.android.gms.internal.measurement.zzfy$zzc: boolean zzf
com.google.android.gms.internal.measurement.zzfy$zze: com.google.android.gms.internal.measurement.zzfy$zze zzc
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object _closeCause
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
com.google.android.gms.internal.measurement.zzfy$zza: com.google.android.gms.internal.measurement.zzfy$zza zzc
com.google.android.gms.internal.measurement.zzfy$zzg: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfy$zzk: boolean zzbh
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
com.google.android.gms.internal.measurement.zzfr$zza$zzc: int zzg
androidx.window.core.Version: int patch
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.google.android.gms.internal.measurement.zzfr$zza$zzc: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfy$zzh: long zzh
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzt
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
com.google.android.gms.internal.measurement.zzfo$zzb: com.google.android.gms.internal.measurement.zzfo$zzb zzc
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzba
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
kotlinx.coroutines.DispatchedCoroutine: int _decision
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzka zzat
com.google.android.gms.internal.measurement.zzfy$zzi: com.google.android.gms.internal.measurement.zzfy$zzb zzh
com.google.android.gms.internal.measurement.zzfr$zzb: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfy$zzc: boolean zzk
com.google.android.gms.internal.measurement.zzfr$zzc: com.google.android.gms.internal.measurement.zzll zzd
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
com.google.android.gms.internal.measurement.zzfy$zzk: long zzam
com.google.android.gms.internal.measurement.zzfr$zzd: java.lang.String zzp
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
com.google.android.gms.internal.measurement.zzfy$zzk: int zze
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
com.google.android.gms.internal.measurement.zzfr$zza$zza: com.google.android.gms.internal.measurement.zzll zzd
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
com.google.android.gms.internal.measurement.zzfo$zzd: java.lang.String zzh
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.google.android.gms.internal.measurement.zzfy$zzj: java.lang.String zzg
com.google.android.gms.internal.measurement.zzfy$zzf: java.lang.String zzg
com.google.android.gms.internal.measurement.zzfy$zzk: boolean zzz
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
com.google.android.gms.internal.measurement.zzfo$zzc: boolean zzh
com.google.android.gms.internal.measurement.zzfo$zzf: int zzf
androidx.window.R$attr: int clearTop
com.google.android.gms.internal.measurement.zzfy$zzk: int zzbo
com.google.android.gms.internal.measurement.zzfy$zzk: long zzn
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzfr$zzf zzs
com.google.android.gms.internal.measurement.zzfo$zzc: com.google.android.gms.internal.measurement.zzfo$zzd zzg
kotlinx.coroutines.CancellableContinuationImpl: int _decisionAndIndex
com.google.android.gms.internal.measurement.zzfo$zzb: boolean zzm
com.google.android.gms.internal.measurement.zzfo$zza: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzgd$zzd: int zze
com.google.android.gms.internal.measurement.zzfy$zzm: com.google.android.gms.internal.measurement.zzfy$zzm zzc
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
com.google.android.gms.internal.measurement.zzib: int zza
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.google.android.gms.internal.measurement.zzfr$zzd: java.lang.String zzl
androidx.window.R$attr: int splitLayoutDirection
com.google.android.gms.internal.measurement.zzfy$zzi: com.google.android.gms.internal.measurement.zzll zzd
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
com.google.android.gms.internal.measurement.zzfo$zzc: java.lang.String zzi
com.google.android.gms.internal.measurement.zzfy$zzk: long zzan
com.google.android.gms.internal.measurement.zzfy$zzn: com.google.android.gms.internal.measurement.zzjz zzg
androidx.window.R$attr: int activityName
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.google.android.gms.internal.measurement.zzfr$zza: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzgd$zzc: int zze
com.google.android.gms.internal.measurement.zzfo$zze: boolean zzj
com.google.android.gms.internal.measurement.zzfy$zzj: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfy$zzo: long zzi
com.google.android.gms.internal.measurement.zzfy$zzg: long zzg
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.google.android.gms.internal.measurement.zzfy$zzk: long zzm
androidx.window.embedding.SplitPairRule: java.util.Set filters
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas resultGuardian
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfy$zzk: long zzl
com.google.android.gms.internal.measurement.zzfr$zza$zzf: com.google.android.gms.internal.measurement.zzll zzd
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.google.android.gms.internal.measurement.zzgd$zzc: com.google.android.gms.internal.measurement.zzll zzd
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
com.google.android.gms.common.zzo: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzkc zzk
com.google.android.gms.internal.measurement.zzfr$zzf: com.google.android.gms.internal.measurement.zzfr$zzf zzc
com.google.android.gms.internal.measurement.zzfy$zzg: com.google.android.gms.internal.measurement.zzfy$zzg zzc
com.google.android.gms.internal.measurement.zzfr$zza: com.google.android.gms.internal.measurement.zzkc zzh
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendSegment
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
com.google.android.gms.internal.measurement.zzfy$zzh: double zzj
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzar
com.google.android.gms.internal.measurement.zzfy$zzf: int zzj
com.google.android.gms.internal.measurement.zzgd$zzb: com.google.android.gms.internal.measurement.zzgd$zzb zzc
com.google.android.gms.internal.measurement.zzfy$zzd: com.google.android.gms.internal.measurement.zzfy$zzm zzh
androidx.window.R$attr: int splitMinWidth
com.google.android.gms.internal.measurement.zzfr$zza$zza: com.google.android.gms.internal.measurement.zzfr$zza$zza zzc
androidx.window.R$styleable: int[] SplitPairFilter
com.google.android.gms.internal.measurement.zzfy$zzf: int zze
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.google.android.gms.internal.measurement.zzfr$zzc: boolean zzh
com.google.android.gms.internal.measurement.zzfy$zze: int zze
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzaw
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.google.android.gms.internal.measurement.zzfr$zza: com.google.android.gms.internal.measurement.zzfr$zza zzc
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean released
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
com.google.android.gms.internal.measurement.zzfy$zzh: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.common.zzs: android.os.Parcelable$Creator CREATOR
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
kotlin.jvm.internal.CallableReference: java.lang.Class owner
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzfr$zzi zzt
com.google.android.gms.internal.measurement.zzgd$zza: com.google.android.gms.internal.measurement.zzkc zze
com.google.android.gms.internal.measurement.zzfy$zzl: int zze
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
com.google.android.gms.internal.measurement.zzfy$zzl: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfr$zzc: int zze
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzfr$zze zzv
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
androidx.window.R$id: int androidx_window_activity_scope
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzbq
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
androidx.window.embedding.ActivityRule: boolean alwaysExpand
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
com.google.android.gms.internal.measurement.zzfy$zzd: boolean zzi
androidx.window.R$styleable: int SplitPairRule_splitRatio
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.google.android.gms.internal.measurement.zzgd$zzd: double zzk
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzax
com.google.android.gms.internal.measurement.zzfy$zzk: boolean zzaf
com.google.android.gms.internal.measurement.zzfr$zzi: java.lang.String zzh
com.google.android.gms.internal.measurement.zzfr$zzh: java.lang.String zzg
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzaa
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzfy$zzl zzas
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfr$zzg: com.google.android.gms.internal.measurement.zzfr$zzg zzc
com.google.android.gms.internal.measurement.zzfr$zza: int zze
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzae
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.google.android.gms.internal.measurement.zzfy$zzg: int zze
androidx.window.R$styleable: int[] SplitPairRule
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
com.google.android.gms.internal.measurement.zzfy$zza: java.lang.String zzg
com.google.android.gms.internal.measurement.zzfr$zzh: int zze
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
com.google.android.gms.internal.measurement.zzfr$zzf: int zzh
com.google.android.gms.internal.measurement.zzfy$zzh: int zze
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
com.google.android.gms.internal.measurement.zzfy$zzj: com.google.android.gms.internal.measurement.zzkc zzf
com.google.android.gms.measurement.internal.zzae: android.os.Parcelable$Creator CREATOR
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
com.google.android.gms.internal.measurement.zzfy$zzj: int zzi
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
com.google.android.gms.internal.measurement.zzfy$zzb: java.lang.String zzj
com.google.android.gms.internal.measurement.zzfy$zzk: long zzx
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzu
com.google.android.gms.internal.measurement.zzfy$zzo: int zze
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
com.google.android.gms.internal.measurement.zzfy$zzm: com.google.android.gms.internal.measurement.zzjz zze
com.google.android.gms.internal.measurement.zzfr$zza$zzc: int zzf
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
androidx.window.R$styleable: int ActivityFilter_activityAction
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
com.google.android.gms.internal.measurement.zzfy$zze: long zzg
com.google.android.gms.internal.measurement.zzfy$zzn: int zzf
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
com.google.android.gms.internal.measurement.zzfr$zzb: java.lang.String zzf
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.google.android.gms.internal.measurement.zzfy$zzh: com.google.android.gms.internal.measurement.zzkc zzk
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
com.google.android.gms.internal.measurement.zzfy$zza: java.lang.String zzf
io.flutter.embedding.engine.FlutterJNI: float displayWidth
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzfy$zzk zzc
com.google.android.gms.internal.measurement.zzfy$zzb: java.lang.String zzi
androidx.window.R$attr: int primaryActivityName
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzq
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfy$zzm: com.google.android.gms.internal.measurement.zzkc zzg
com.google.android.gms.internal.measurement.zzjt: com.google.android.gms.internal.measurement.zzmj zzb
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
kotlinx.coroutines.UndispatchedCoroutine: boolean threadLocalIsSet
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
com.google.android.gms.internal.measurement.zzfy$zze: int zzf
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image image
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: java.lang.String TAG
androidx.window.R$styleable: int[] ActivityFilter
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
com.google.android.gms.internal.measurement.zzfo$zzb: com.google.android.gms.internal.measurement.zzfo$zzd zzj
com.google.android.gms.internal.measurement.zzfo$zzf: boolean zzh
com.google.android.gms.measurement.internal.zzo: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzfr$zzg zzu
com.google.android.gms.internal.measurement.zzfo$zzc: int zze
com.google.android.gms.internal.measurement.zzfo$zze: int zze
com.google.android.gms.internal.measurement.zzfr$zze: com.google.android.gms.internal.measurement.zzkc zze
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
androidx.window.R$styleable: int[] ActivityRule
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.lang.String LIBRARY_NAME
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
androidx.window.R$attr: int splitMinSmallestWidth
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
com.google.android.gms.internal.measurement.zzfy$zzn: int zze
androidx.window.R$attr: int activityAction
com.google.android.gms.internal.measurement.zzfy$zzd: com.google.android.gms.internal.measurement.zzll zzd
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzkc zzag
com.google.android.gms.internal.measurement.zzfy$zze: com.google.android.gms.internal.measurement.zzll zzd
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
kotlinx.coroutines.channels.BufferedChannel: long sendersAndCloseStatus
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
androidx.window.core.Bounds: int top
com.google.android.gms.internal.measurement.zzfy$zzn: com.google.android.gms.internal.measurement.zzfy$zzn zzc
com.google.android.gms.internal.measurement.zzfo$zze: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfy$zzi: java.lang.String zzf
com.google.android.gms.internal.measurement.zzfo$zzd: java.lang.String zzi
kotlin.jvm.internal.CallableReference: java.lang.String signature
com.google.android.gms.internal.measurement.zzfy$zzh: java.lang.String zzg
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
com.google.android.gms.internal.measurement.zzfy$zzb: java.lang.String zzl
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
kotlin.jvm.internal.CallableReference: java.lang.String name
io.flutter.embedding.engine.FlutterJNI: java.lang.String vmServiceUri
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzbm
kotlin.jvm.internal.CallableReference: boolean isTopLevel
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
com.google.android.gms.internal.measurement.zzfy$zzo: com.google.android.gms.internal.measurement.zzfy$zzo zzc
com.google.android.gms.internal.measurement.zzfy$zzj: com.google.android.gms.internal.measurement.zzfy$zzj zzc
com.google.android.gms.internal.measurement.zzfy$zzd: int zze
com.google.android.gms.internal.measurement.zzfy$zzb: java.lang.String zzk
com.google.android.gms.internal.measurement.zzgd$zzc: com.google.android.gms.internal.measurement.zzgd$zza zzg
com.google.android.gms.internal.measurement.zzfy$zzk: int zzac
com.google.android.gms.internal.measurement.zzfo$zzd: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfo$zzb: java.lang.String zzg
androidx.window.embedding.SplitRule: int minSmallestWidth
com.google.android.gms.internal.measurement.zzgd$zzd: java.lang.String zzi
com.google.android.gms.internal.measurement.zzfr$zza$zzc: com.google.android.gms.internal.measurement.zzfr$zza$zzc zzc
com.google.android.gms.internal.measurement.zzfy$zzf: long zzi
com.google.android.gms.internal.measurement.zzfr$zza: com.google.android.gms.internal.measurement.zzkc zzj
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
com.google.android.gms.internal.measurement.zzjt$zzd: com.google.android.gms.internal.measurement.zzjm zzc
com.google.android.gms.internal.measurement.zzfy$zzk: int zzf
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.google.android.gms.internal.measurement.zzfy$zzk: long zzab
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
com.google.android.gms.internal.measurement.zzfy$zzm: com.google.android.gms.internal.measurement.zzjz zzf
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzbi
com.google.android.gms.internal.measurement.zzfr$zza$zza: int zzf
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
com.google.android.gms.internal.measurement.zzfo$zza: boolean zzi
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.google.android.gms.internal.measurement.zzfr$zzb: com.google.android.gms.internal.measurement.zzfr$zzb zzc
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.google.android.gms.internal.measurement.zzfo$zzc: com.google.android.gms.internal.measurement.zzfo$zzf zzf
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
com.google.android.gms.internal.measurement.zzfo$zza: com.google.android.gms.internal.measurement.zzkc zzh
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
com.google.android.gms.internal.measurement.zzfy$zza: java.lang.String zzj
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzah
androidx.window.R$id: int locale
kotlin.jvm.internal.FunctionReference: int arity
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
com.google.android.gms.internal.measurement.zzfo$zzf: int zze
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzp
com.google.android.gms.internal.measurement.zzfy$zzl: int zzf
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$ImeVisibleListener imeVisibleListener
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.google.android.gms.internal.measurement.zzfy$zza: java.lang.String zzl
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzfr$zza zzr
com.google.android.gms.internal.measurement.zzfr$zze: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfr$zzi: java.lang.String zzg
com.google.android.gms.internal.measurement.zzfr$zzi: int zzi
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzkc zzj
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
androidx.window.embedding.SplitRule: float splitRatio
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
com.google.android.gms.internal.measurement.zzgd$zzd: com.google.android.gms.internal.measurement.zzll zzd
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.google.android.gms.internal.measurement.zzgd$zzb: int zze
androidx.window.R$attr: int splitRatio
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
androidx.window.R$styleable: int[] SplitPlaceholderRule
com.google.android.gms.internal.measurement.zzfy$zzc: boolean zzl
com.google.android.gms.internal.measurement.zzfy$zzb: java.lang.String zzg
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzfy$zzi zzbc
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.google.android.gms.internal.measurement.zzfo$zzb: boolean zzi
com.google.android.gms.internal.measurement.zzfy$zza: com.google.android.gms.internal.measurement.zzll zzd
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
com.google.android.gms.internal.measurement.zzfr$zzb: com.google.android.gms.internal.measurement.zzkc zzg
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object bufferEndSegment
com.google.android.gms.internal.measurement.zzfr$zzh: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfr$zza: boolean zzi
com.google.android.gms.internal.measurement.zzfo$zzf: java.lang.String zzg
com.google.android.gms.internal.measurement.zzfo$zzd: java.lang.String zzj
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.google.android.gms.internal.measurement.zzfy$zzo: float zzj
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzao
androidx.window.embedding.SplitPairRule: boolean clearTop
com.google.android.gms.internal.measurement.zzfy$zzj: int zze
com.google.android.gms.internal.measurement.zzfy$zzb: java.lang.String zzh
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
androidx.window.R$id: int ltr
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
com.google.android.gms.internal.measurement.zzjt: java.util.Map zzc
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object closeHandler
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.google.android.gms.internal.measurement.zzfy$zzh: float zzi
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.google.android.gms.internal.measurement.zzfy$zzi: java.lang.String zzg
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
com.google.android.gms.internal.measurement.zzfr$zza: com.google.android.gms.internal.measurement.zzkc zzg
com.google.android.gms.internal.measurement.zzfo$zzd: int zze
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
com.google.android.gms.internal.measurement.zzfr$zzc: java.lang.String zzf
com.google.android.gms.internal.measurement.zzfr$zzg: int zze
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
com.google.android.gms.internal.measurement.zzfy$zzf: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzo
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
com.google.android.gms.internal.measurement.zzfy$zzk: boolean zzaz
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
com.google.android.gms.internal.measurement.zzfy$zzc: boolean zzj
androidx.window.core.Version: java.lang.String description
com.google.android.gms.internal.measurement.zzfo$zzc: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzal
com.google.android.gms.internal.measurement.zzfy$zzc: boolean zzg
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzkc zzh
com.google.android.gms.internal.measurement.zzfr$zza$zza: int zze
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzbk
com.google.android.gms.measurement.internal.zzno: android.os.Parcelable$Creator CREATOR
androidx.window.core.Version: androidx.window.core.Version CURRENT
com.google.android.gms.internal.measurement.zzgd$zzd: java.lang.String zzh
com.google.android.gms.internal.measurement.zzfy$zzc: com.google.android.gms.internal.measurement.zzfy$zzc zzc
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
com.google.android.gms.internal.measurement.zzfo$zzf: com.google.android.gms.internal.measurement.zzkc zzi
com.google.android.gms.internal.measurement.zzfy$zzk: int zzak
com.google.android.gms.internal.measurement.zzfr$zza$zzc: int zze
com.google.android.gms.internal.measurement.zzfr$zzb: boolean zzh
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
com.google.android.gms.internal.measurement.zzfo$zzb: int zze
kotlinx.coroutines.CompletedExceptionally: int _handled
com.google.android.gms.internal.measurement.zzfo$zzb: boolean zzk
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzkc zzi
androidx.window.R$attr: int secondaryActivityAction
com.google.android.gms.internal.measurement.zzfo$zzb: int zzf
com.google.android.gms.internal.measurement.zzgd$zzd: com.google.android.gms.internal.measurement.zzgd$zzd zzc
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzkc zzbe
com.google.android.gms.internal.measurement.zzfr$zza$zzf: int zze
com.google.android.gms.internal.measurement.zzfr$zzc: boolean zzg
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.google.android.gms.internal.measurement.zzfy$zzc: com.google.android.gms.internal.measurement.zzll zzd
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd$zzb: com.google.android.gms.internal.measurement.zzkc zzg
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
androidx.window.embedding.SplitRule: int layoutDirection
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
com.google.android.gms.internal.measurement.zzfo$zzc: com.google.android.gms.internal.measurement.zzfo$zzc zzc
com.google.android.gms.internal.measurement.zzfo$zze: com.google.android.gms.internal.measurement.zzfo$zzc zzh
com.google.android.gms.internal.measurement.zzfy$zzl: com.google.android.gms.internal.measurement.zzfy$zzl zzc
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
androidx.window.R$attr: int finishSecondaryWithPrimary
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
com.google.android.gms.internal.measurement.zzfo$zze: com.google.android.gms.internal.measurement.zzfo$zze zzc
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
com.google.android.gms.internal.measurement.zzfy$zzd: int zzf
com.google.android.gms.internal.measurement.zzfy$zzo: com.google.android.gms.internal.measurement.zzll zzd
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.google.android.gms.internal.measurement.zzfo$zzb: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfo$zzb: boolean zzl
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
com.google.android.gms.internal.measurement.zzfy$zzk: boolean zzbb
io.flutter.embedding.engine.FlutterJNI: float displayHeight
com.google.android.gms.internal.measurement.zzgd$zza: com.google.android.gms.internal.measurement.zzgd$zza zzc
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
androidx.window.R$styleable: int SplitPairRule_clearTop
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzkc zzi
com.google.android.gms.internal.measurement.zzfy$zzm: com.google.android.gms.internal.measurement.zzkc zzh
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
com.google.android.gms.internal.measurement.zzfr$zzf: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfo$zzd: int zzf
com.google.android.gms.internal.measurement.zzfy$zzk: int zzaq
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
com.google.android.gms.internal.measurement.zzgd$zzb: java.lang.String zzf
androidx.window.core.Bounds: int bottom
com.google.android.gms.internal.measurement.zzjt: int zzd
com.google.android.gms.internal.measurement.zzfo$zze: boolean zzk
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
com.google.android.gms.internal.measurement.zzfr$zzd: int zze
com.google.android.gms.internal.measurement.zzfy$zzo: java.lang.String zzh
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
com.google.android.gms.internal.measurement.zzfr$zzc: int zzi
com.google.android.gms.internal.measurement.zzgd$zzc: com.google.android.gms.internal.measurement.zzkc zzf
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
androidx.window.core.Version: int getPatch()
androidx.window.core.Version: java.lang.String getDescription()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
kotlin.jvm.internal.FunctionReference: boolean isExternal()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
androidx.window.core.Version: int getMinor()
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.google.android.gms.internal.measurement.zzlp: zzlp()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
com.google.android.gms.internal.measurement.zzgd$zzb: zzgd$zzb()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
kotlin.internal.PlatformImplementations: PlatformImplementations()
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
io.flutter.plugin.platform.PlatformViewWrapper: void setLayoutParams(android.widget.FrameLayout$LayoutParams)
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
com.google.firebase.database.core.RepoInfo: RepoInfo()
androidx.window.embedding.SplitRule: SplitRule()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.window.layout.WindowInfoTracker$-CC: void reset()
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzdo)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzfy$zzk: zzfy$zzk()
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
com.google.android.gms.internal.measurement.zzfy$zzm: zzfy$zzm()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
kotlinx.coroutines.EventLoop: EventLoop()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
androidx.collection.ArraySet: ArraySet()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzdo)
com.google.android.gms.tasks.Task: Task()
kotlin.jvm.internal.FunctionReference: int hashCode()
kotlin.jvm.internal.CallableReference: boolean isOpen()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: com.google.firebase.analytics.connector.AnalyticsConnector lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
com.google.android.gms.internal.measurement.zzgd$zzc: zzgd$zzc()
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture getMeasurementApiStatusAsync()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
com.google.android.gms.internal.measurement.zzfr$zzg: zzfr$zzg()
com.google.android.gms.internal.measurement.zzfo$zzf$zzb: com.google.android.gms.internal.measurement.zzfo$zzf$zzb[] values()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
io.flutter.plugins.firebase.database.FlutterFirebaseAppRegistrar: java.util.List getComponents()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
com.google.firebase.database.snapshot.Node$HashVersion: com.google.firebase.database.snapshot.Node$HashVersion valueOf(java.lang.String)
androidx.window.embedding.SplitInfo: float getSplitRatio()
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$102(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
com.google.android.gms.internal.measurement.zzjp: com.google.android.gms.internal.measurement.zzjp[] values()
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
com.google.android.gms.internal.measurement.zzfy$zzn: zzfy$zzn()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.google.firebase.FirebaseCommonKtxRegistrar: java.util.List getComponents()
androidx.collection.SimpleArrayMap: SimpleArrayMap()
com.google.android.gms.internal.measurement.zzfr$zze: zzfr$zze()
kotlinx.coroutines.YieldContext: YieldContext()
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object registerWebSource(androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest,kotlin.coroutines.Continuation)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.firebase.database.FirebaseDatabaseKtxRegistrar: FirebaseDatabaseKtxRegistrar()
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
androidx.fragment.app.Fragment: Fragment()
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
com.google.android.gms.internal.measurement.zzgd$zza: zzgd$zza()
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.window.layout.EmptyDecorator: EmptyDecorator()
com.google.firebase.database.DatabaseRegistrar: com.google.firebase.database.FirebaseDatabaseComponent lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: MeasurementManager()
androidx.window.core.Bounds: boolean isEmpty()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.android.gms.measurement.internal.zzjh: com.google.android.gms.measurement.internal.zzjh[] values()
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.google.android.gms.internal.measurement.zzbw: zzbw()
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState valueOf(java.lang.String)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
com.google.android.gms.dynamite.zzn: zzn()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
androidx.window.layout.WindowMetricsCalculator$-CC: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
com.google.firebase.database.core.operation.OperationSource$Source: com.google.firebase.database.core.operation.OperationSource$Source[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
androidx.window.core.Bounds: int hashCode()
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
androidx.window.layout.WindowLayoutInfo: int hashCode()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
com.google.android.gms.internal.measurement.zzcn: com.google.android.gms.internal.measurement.zzcn[] values()
com.google.android.gms.internal.measurement.zzfy$zza: zzfy$zza()
com.google.android.gms.internal.measurement.zzfr$zzf: zzfr$zzf()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
androidx.window.R$id: R$id()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.gms.internal.measurement.zzfo$zzc: zzfo$zzc()
androidx.core.view.WindowInsetsCompat$Impl: boolean isVisible(int)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture registerTriggerAsync(android.net.Uri)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.google.android.gms.internal.measurement.zzjg: zzjg()
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
androidx.window.java.R: R()
androidx.window.embedding.ActivityRule: int hashCode()
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
kotlinx.coroutines.CancelHandler: CancelHandler()
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
com.google.firebase.StartupTime: StartupTime()
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.google.firebase.heartbeatinfo.HeartBeatResult: HeartBeatResult()
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.firebase.database.logging.Logger$Level: com.google.firebase.database.logging.Logger$Level[] values()
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object registerTrigger(android.net.Uri,kotlin.coroutines.Continuation)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
com.google.firebase.database.core.view.Event$EventType: com.google.firebase.database.core.view.Event$EventType[] values()
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
kotlin.jvm.internal.Lambda: int getArity()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
com.google.android.gms.internal.measurement.zzdm: zzdm()
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
com.google.android.gms.internal.measurement.zzap: zzap()
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
kotlin.jvm.internal.Lambda: java.lang.String toString()
androidx.window.embedding.SplitPairRule: boolean getClearTop()
com.google.android.gms.internal.measurement.zzfr$zza$zzc: zzfr$zza$zzc()
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State[] values()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
com.google.android.gms.internal.measurement.zzhu: zzhu()
com.google.firebase.database.DatabaseRegistrar: java.util.List getComponents()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.measurement.zzfr$zza$zzd: com.google.android.gms.internal.measurement.zzfr$zza$zzd[] values()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.firebase.database.connection.Connection$DisconnectReason: com.google.firebase.database.connection.Connection$DisconnectReason[] values()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor[] values()
com.google.android.gms.internal.measurement.zzfo$zzd: zzfo$zzd()
com.google.android.gms.internal.measurement.zzfr$zza$zza: zzfr$zza$zza()
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
io.flutter.embedding.engine.FlutterJNI: float getScaledFontSize(float,int)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
androidx.privacysandbox.ads.adservices.internal.AdServicesInfo$Extensions30Impl: int getAdServicesVersion()
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
kotlin.jvm.internal.CallableReference: java.lang.String getName()
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
androidx.window.R$styleable: R$styleable()
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
com.google.firebase.database.tubesock.WebSocket$State: com.google.firebase.database.tubesock.WebSocket$State valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzii: zzii()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
com.google.android.gms.internal.measurement.zzjr: zzjr()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
androidx.window.embedding.ActivityFilter: int hashCode()
com.google.android.gms.common.api.Api$AbstractClientBuilder: Api$AbstractClientBuilder()
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState[] values()
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
com.google.android.gms.internal.measurement.zzdm: com.google.android.gms.internal.measurement.zzdj asInterface(android.os.IBinder)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isVisible(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.window.core.Version: int compareTo(java.lang.Object)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
com.google.android.gms.internal.measurement.zzgs: zzgs()
androidx.window.core.Version: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: FlutterRenderer$ImageTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
com.google.android.gms.internal.common.zzc: zzc()
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
io.flutter.view.TextureRegistry$ImageTextureEntry: android.media.Image acquireLatestImage()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void finalize()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
kotlin.collections.IntIterator: IntIterator()
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.SplitInfo: int hashCode()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewTreeObserver$OnGlobalFocusChangeListener getActiveFocusListener()
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
androidx.window.core.Bounds: int getRight()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
io.flutter.plugin.platform.PlatformViewWrapper: void setTouchProcessor(io.flutter.embedding.android.AndroidTouchProcessor)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.window.layout.WindowMetricsCalculator$-CC: androidx.window.layout.WindowMetricsCalculator getOrCreate()
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$getPluginConstantsForFirebaseApp$0(com.google.firebase.FirebaseApp,com.google.android.gms.tasks.TaskCompletionSource)
com.google.android.gms.internal.base.zac: zac()
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object registerWebTrigger(androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
androidx.window.embedding.ActivityFilter: java.lang.String toString()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
kotlin.collections.AbstractList: AbstractList()
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
androidx.window.R$attr: R$attr()
com.google.android.gms.internal.measurement.zzjc: zzjc()
com.google.firebase.database.core.operation.Operation$OperationType: com.google.firebase.database.core.operation.Operation$OperationType valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.internal.measurement.zzfr$zzi: zzfr$zzi()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.measurement.zzik: zzik()
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
androidx.window.embedding.ActivityStack: int hashCode()
com.google.android.gms.internal.measurement.zzfr$zzb: zzfr$zzb()
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
com.google.android.gms.internal.measurement.zzay: zzay()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
com.google.android.gms.internal.measurement.zzbx: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
com.google.android.gms.internal.measurement.zzfr$zza$zzf: zzfr$zza$zzf()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void setImeVisibleListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$ImeVisibleListener)
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar: java.util.List getComponents()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
com.google.firebase.database.connection.Connection$State: com.google.firebase.database.connection.Connection$State[] values()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
com.google.android.gms.internal.measurement.zzfr$zzd$zza: zzfr$zzd$zza()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
com.google.firebase.database.core.persistence.PruneForest: PruneForest()
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzfy$zzk$zza: zzfy$zzk$zza()
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
androidx.core.app.Person$Api28Impl: androidx.core.app.Person fromAndroidPerson(android.app.Person)
androidx.window.core.Bounds: android.graphics.Rect toRect()
com.google.android.gms.internal.measurement.zzjt$zzd: zzjt$zzd()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
io.flutter.view.TextureRegistry$ImageTextureEntry: void release()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.window.embedding.MatcherUtils: MatcherUtils()
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
com.google.firebase.database.core.utilities.DefaultRunLoop: DefaultRunLoop()
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
com.google.android.gms.internal.measurement.zzlv: zzlv()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSgtmDebugInfo(android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
androidx.window.core.Bounds: Bounds(int,int,int,int)
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
kotlin.jvm.internal.PropertyReference: PropertyReference()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.google.android.gms.internal.measurement.zzhg$zza: zzhg$zza()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
com.google.firebase.database.logging.Logger$Level: com.google.firebase.database.logging.Logger$Level valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature: int hashCode()
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
androidx.window.core.Bounds: boolean isZero()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
androidx.concurrent.futures.AbstractResolvableFuture: AbstractResolvableFuture()
androidx.window.core.Version: Version(int,int,int,java.lang.String)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
com.google.android.gms.internal.measurement.zzfr$zzd: zzfr$zzd()
com.google.android.gms.common.api.PendingResult: PendingResult()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$didReinitializeFirebaseCore$1(com.google.android.gms.tasks.TaskCompletionSource)
com.google.firebase.database.tubesock.WebSocket$State: com.google.firebase.database.tubesock.WebSocket$State[] values()
com.google.android.gms.internal.measurement.zzfy$zzl$zza: zzfy$zzl$zza()
com.google.android.gms.internal.measurement.zzfr$zza$zze: com.google.android.gms.internal.measurement.zzfr$zza$zze[] values()
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
com.google.firebase.database.ktx.FirebaseDatabaseKtxRegistrar: FirebaseDatabaseKtxRegistrar()
com.google.android.gms.internal.measurement.zzfy$zzj$zzb: com.google.android.gms.internal.measurement.zzfy$zzj$zzb[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getVMServiceUri()
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: java.util.List getComponents()
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
kotlinx.coroutines.internal.CtorCache: CtorCache()
com.google.android.gms.internal.measurement.zzfo$zze: zzfo$zze()
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.google.android.gms.internal.measurement.zzb: zzb()
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.google.android.gms.internal.measurement.zzfy$zzf$zza: zzfy$zzf$zza()
com.google.android.gms.internal.measurement.zzfo$zzd$zzb: com.google.android.gms.internal.measurement.zzfo$zzd$zzb[] values()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture registerWebSourceAsync(androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest)
com.google.firebase.database.core.SparseSnapshotTree: SparseSnapshotTree()
com.google.firebase.database.Logger$Level: com.google.firebase.database.Logger$Level valueOf(java.lang.String)
com.google.firebase.database.collection.RBTreeSortedMap$Builder$BooleanChunk: RBTreeSortedMap$Builder$BooleanChunk()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void release()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$ImeVisibleListener getImeVisibleListener()
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
com.google.firebase.database.snapshot.LeafNode$LeafType: com.google.firebase.database.snapshot.LeafNode$LeafType valueOf(java.lang.String)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
com.google.android.gms.internal.measurement.zzkd: com.google.android.gms.internal.measurement.zzkd[] values()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: AccessibilityBridge$CustomAccessibilityAction()
com.google.firebase.appcheck.AppCheckTokenResult: AppCheckTokenResult()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
com.google.android.gms.internal.measurement.zzfy$zzl$zzb: com.google.android.gms.internal.measurement.zzfy$zzl$zzb[] values()
io.flutter.view.TextureRegistry$ImageTextureEntry: void pushImage(android.media.Image)
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzdo)
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void nativeSetIsRenderingToImageView(long,boolean)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
com.google.firebase.database.core.utilities.ParsedUrl: ParsedUrl()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
com.google.android.gms.internal.measurement.zzfo$zze$zza: zzfo$zze$zza()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
com.google.firebase.installations.FirebaseInstallationsKtxRegistrar: FirebaseInstallationsKtxRegistrar()
com.google.android.gms.internal.measurement.zzjn: com.google.android.gms.internal.measurement.zzjn[] values()
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
com.google.android.gms.internal.measurement.zzjt: zzjt()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl30: boolean isVisible(int)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
com.google.firebase.database.core.operation.OperationSource$Source: com.google.firebase.database.core.operation.OperationSource$Source valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzfo$zza$zza: zzfo$zza$zza()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.google.android.gms.internal.measurement.zzml: zzml()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzdo)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetHeight()
androidx.window.layout.WindowInfoTracker$Companion: void reset()
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
com.google.android.gms.internal.measurement.zzfy$zze$zza: zzfy$zze$zza()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
io.flutter.plugin.platform.PlatformViewWrapper: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzdw,long)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
androidx.window.layout.WindowMetrics: int hashCode()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
androidx.window.embedding.ActivityStack: java.lang.String toString()
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
com.google.android.gms.internal.measurement.zzfy$zzl: zzfy$zzl()
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
com.google.android.gms.internal.measurement.zzfy$zza$zza: zzfy$zza$zza()
com.google.firebase.database.connection.Connection$DisconnectReason: com.google.firebase.database.connection.Connection$DisconnectReason valueOf(java.lang.String)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture registerWebTriggerAsync(androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest)
com.google.common.collect.ImmutableSet: ImmutableSet()
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
com.google.android.gms.internal.measurement.zzic: zzic()
androidx.window.embedding.ActivityStack: boolean isEmpty()
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object registerSource(android.net.Uri,android.view.InputEvent,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
androidx.window.embedding.SplitRule: int getLayoutDirection()
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzdo,long)
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
com.google.android.gms.internal.measurement.zzfy$zzh$zza: zzfy$zzh$zza()
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzdo)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
com.google.android.gms.internal.measurement.zzgd$zzd$zza: com.google.android.gms.internal.measurement.zzgd$zzd$zza[] values()
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
com.google.android.gms.internal.measurement.zzjs: zzjs()
com.google.android.gms.internal.measurement.zzfy$zzj: zzfy$zzj()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isTypeVisible(int)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.gms.internal.measurement.zzfy$zzj$zza: zzfy$zzj$zza()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
androidx.window.core.Bounds: int getHeight()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
com.google.android.gms.internal.measurement.zzfr$zza: zzfr$zza()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.android.gms.internal.measurement.zzaf: zzaf()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: GeneratedAndroidFirebaseCore$PigeonInitializeResponse()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzln: com.google.android.gms.internal.measurement.zzln[] values()
com.google.common.base.Optional: Optional()
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
com.google.firebase.database.core.EventRegistration: EventRegistration()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color[] values()
kotlin.jvm.internal.FunctionReference: int getArity()
androidx.window.embedding.SplitController: void clearRegisteredRules()
com.google.firebase.database.snapshot.LeafNode$LeafType: com.google.firebase.database.snapshot.LeafNode$LeafType[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzdo)
com.google.android.gms.internal.measurement.zzms: com.google.android.gms.internal.measurement.zzms[] values()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
com.google.android.gms.internal.measurement.zzga: com.google.android.gms.internal.measurement.zzga[] values()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
androidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)
com.google.android.gms.internal.measurement.zzfy$zzm$zza: zzfy$zzm$zza()
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
androidx.window.core.Version: int hashCode()
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
androidx.window.layout.WindowMetrics: java.lang.String toString()
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
com.google.android.gms.measurement.internal.zznt: com.google.android.gms.measurement.internal.zznt[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
androidx.window.layout.WindowMetricsCalculator$-CC: void reset()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
com.google.firebase.database.ktx.FirebaseDatabaseKtxRegistrar: java.util.List getComponents()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
com.google.android.gms.internal.measurement.zzs: com.google.android.gms.internal.measurement.zzs[] values()
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader()
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
com.google.android.gms.internal.measurement.zzcm: zzcm()
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: AbstractResolvableFuture$Waiter()
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.google.android.gms.internal.measurement.zzfy$zzg$zza: zzfy$zzg$zza()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image acquireLatestImage()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
com.google.common.collect.Ordering: Ordering()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
com.google.android.gms.internal.measurement.zzfo$zza: zzfo$zza()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: FragmentTransition$FragmentContainerTransition()
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void updateDisplayMetrics(int,float,float,float)
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
com.google.firebase.installations.remote.TokenResult: TokenResult()
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
androidx.window.layout.FoldingFeature: boolean isSeparating()
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
com.google.android.gms.internal.measurement.zzfy$zzo: zzfy$zzo()
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures: MeasurementManagerFutures()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
com.google.android.gms.common.api.internal.zzb: zzb()
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult valueOf(java.lang.String)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.view.TextureRegistry$ImageTextureEntry: long id()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
com.google.android.gms.internal.measurement.zzjw: zzjw()
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$ImeVisibleListener access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
com.google.android.gms.internal.measurement.zzfo$zzc$zza: zzfo$zzc$zza()
com.google.android.gms.internal.measurement.zzib: zzib()
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
io.flutter.embedding.engine.FlutterJNI: void SetIsRenderingToImageView(boolean)
_COROUTINE._BOUNDARY: _BOUNDARY()
com.google.android.gms.internal.measurement.zzco: com.google.android.gms.internal.measurement.zzco[] values()
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
com.google.android.gms.internal.measurement.zzfy$zzg: zzfy$zzg()
com.google.android.gms.internal.measurement.zzfy$zzh: zzfy$zzh()
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
com.google.firebase.concurrent.ExecutorsRegistrar: ExecutorsRegistrar()
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
com.google.android.gms.internal.measurement.zzfy$zzc: zzfy$zzc()
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetWidth()
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
androidx.core.app.Person$Api28Impl: android.app.Person toAndroidPerson(androidx.core.app.Person)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzdp)
com.google.android.gms.internal.measurement.zzbx: android.os.IBinder asBinder()
com.google.firebase.database.core.view.QueryParams$ViewFrom: com.google.firebase.database.core.view.QueryParams$ViewFrom[] values()
com.google.android.gms.internal.ads_identifier.zzc: zzc()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture deleteRegistrationsAsync(androidx.privacysandbox.ads.adservices.measurement.DeletionRequest)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
com.google.firebase.database.core.view.QueryParams: QueryParams()
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzdp)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] values()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzdo)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzdo)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
com.google.android.gms.internal.measurement.zzbv: com.google.android.gms.internal.measurement.zzbv[] values()
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
com.google.android.gms.internal.measurement.zzfy$zzd$zza: zzfy$zzd$zza()
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
com.google.android.gms.internal.measurement.zzmj: zzmj()
androidx.fragment.app.FragmentActivity: FragmentActivity()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterImageTexture(long,long,java.lang.ref.WeakReference)
kotlin.jvm.internal.CallableReference: boolean isFinal()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobNode: JobNode()
com.example.power_app.MainActivity: MainActivity()
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.google.android.gms.internal.measurement.zzcj: com.google.android.gms.internal.measurement.zzcj[] values()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.firebase.platforminfo.LibraryVersion: LibraryVersion()
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
androidx.core.content.ContextCompat$Api33Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
androidx.lifecycle.ViewModel: ViewModel()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.google.android.gms.internal.measurement.zzkw: zzkw()
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.fragment.app.FragmentManagerImpl: FragmentManagerImpl()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsentThirdParty(android.os.Bundle,long)
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
com.google.android.gms.common.internal.zzk: zzk()
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zzlb getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
com.google.firebase.database.collection.ImmutableSortedMap: ImmutableSortedMap()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
androidx.window.core.Version$Companion: Version$Companion()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
io.flutter.embedding.engine.FlutterEngineGroupCache: FlutterEngineGroupCache()
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
io.flutter.plugins.firebase.database.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
com.google.android.gms.internal.measurement.zzfy$zzo$zza: zzfy$zzo$zza()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
com.google.android.gms.internal.measurement.zzkk: zzkk()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.google.android.gms.internal.measurement.zzfy$zzd: zzfy$zzd()
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
kotlin.jvm.internal.Intrinsics: Intrinsics()
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzfy$zzn$zza: zzfy$zzn$zza()
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.firebase.database.core.operation.Operation$OperationType: com.google.firebase.database.core.operation.Operation$OperationType[] values()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.core.Bounds: int getLeft()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.google.firebase.database.core.view.QueryParams$ViewFrom: com.google.firebase.database.core.view.QueryParams$ViewFrom valueOf(java.lang.String)
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: CallbackToFutureAdapter$Completer()
androidx.window.core.Version: java.math.BigInteger getBigInteger()
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
com.google.android.gms.internal.measurement.zzfr$zzc: zzfr$zzc()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
com.google.firebase.database.FirebaseDatabaseKtxRegistrar: java.util.List getComponents()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
androidx.window.layout.WindowInfoTracker$-CC: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void registerImageTexture(long,io.flutter.view.TextureRegistry$ImageTextureEntry)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzdp)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
androidx.window.core.Bounds: java.lang.String toString()
androidx.window.core.Bounds: int getBottom()
com.google.android.gms.internal.measurement.zzfy$zzf: zzfy$zzf()
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
kotlinx.coroutines.scheduling.Task: Task()
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsetsAnimation$Bounds onStart(android.view.WindowInsetsAnimation,android.view.WindowInsetsAnimation$Bounds)
kotlin.random.Random: Random()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
androidx.window.core.Version: int getMajor()
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
com.google.android.gms.internal.measurement.zzgd$zzd: zzgd$zzd()
com.google.android.gms.internal.measurement.zzfo$zzb$zza: zzfo$zzb$zza()
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture registerSourceAsync(android.net.Uri,android.view.InputEvent)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzdo)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.firebase.database.core.view.Event$EventType: com.google.firebase.database.core.view.Event$EventType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object getMeasurementApiStatus(kotlin.coroutines.Continuation)
com.google.android.gms.measurement.internal.zzjg: com.google.android.gms.measurement.internal.zzjg[] values()
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState[] values()
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color valueOf(java.lang.String)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
androidx.lifecycle.ViewModelStore: ViewModelStore()
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] values()
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar: FirebaseCommonLegacyRegistrar()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.google.firebase.database.snapshot.Node$HashVersion: com.google.firebase.database.snapshot.Node$HashVersion[] values()
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzdo,int)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.SplitPairFilter: int hashCode()
androidx.lifecycle.ViewModelProvider$KeyedFactory: ViewModelProvider$KeyedFactory()
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State valueOf(java.lang.String)
com.google.firebase.installations.local.PersistedInstallationEntry: PersistedInstallationEntry()
com.google.android.gms.internal.measurement.zzhc: zzhc()
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzfr$zzc$zza: zzfr$zzc$zza()
com.google.android.gms.internal.measurement.zzfo$zzf: zzfo$zzf()
com.google.firebase.installations.ktx.FirebaseInstallationsKtxRegistrar: FirebaseInstallationsKtxRegistrar()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getSessionId(com.google.android.gms.internal.measurement.zzdo)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
com.google.android.gms.internal.measurement.zzfo$zzb: zzfo$zzb()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.google.android.gms.internal.measurement.zzfr$zzh: zzfr$zzh()
androidx.window.embedding.SplitInfo: java.lang.String toString()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
com.google.firebase.database.Logger$Level: com.google.firebase.database.Logger$Level[] values()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.window.embedding.SplitRule: int getMinWidth()
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateDisplayMetrics(long)
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] values()
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.google.android.gms.tasks.TaskCompletionSource: TaskCompletionSource()
com.google.common.util.concurrent.internal.InternalFutureFailureAccess: InternalFutureFailureAccess()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.firebase.database.DatabaseRegistrar: DatabaseRegistrar()
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzdu)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
com.google.android.gms.signin.internal.zaa: zaa()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
com.google.firebase.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
com.google.android.gms.measurement.internal.zzje$zza: com.google.android.gms.measurement.internal.zzje$zza[] values()
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
com.google.common.collect.BaseImmutableMultimap: BaseImmutableMultimap()
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id()
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
com.google.android.gms.internal.measurement.zzfy$zzb: zzfy$zzb()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
com.google.android.gms.internal.measurement.zzjm: zzjm()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
androidx.window.core.Bounds: int getTop()
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.google.android.gms.internal.measurement.zzfy$zzi: zzfy$zzi()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzdo)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object deleteRegistrations(androidx.privacysandbox.ads.adservices.measurement.DeletionRequest,kotlin.coroutines.Continuation)
com.google.firebase.installations.remote.InstallationResponse: InstallationResponse()
com.google.firebase.database.connection.Connection$State: com.google.firebase.database.connection.Connection$State valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzdo,long)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
com.google.android.gms.internal.measurement.zzfy$zzc$zza: zzfy$zzc$zza()
androidx.window.embedding.SplitController: SplitController()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzdo,long)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: GeneratedAndroidFirebaseCore$PigeonFirebaseOptions()
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.window.core.Bounds: int getWidth()
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
com.google.android.gms.internal.measurement.zzfy$zze: zzfy$zze()
com.google.android.gms.common.api.internal.zzd: zzd()
androidx.window.embedding.SplitPairRule: int hashCode()
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.window.core.Bounds: boolean equals(java.lang.Object)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
com.google.android.gms.internal.measurement.zzmz: com.google.android.gms.internal.measurement.zzmz[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
com.google.android.gms.internal.measurement.zzaj: zzaj()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
androidx.window.embedding.SplitRule: float getSplitRatio()
io.flutter.embedding.android.FlutterView: void setVisibility(int)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
com.google.android.gms.internal.measurement.zzje: zzje()
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: GlobalLibraryVersionRegistrar()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
androidx.window.R: R()
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
com.google.firebase.database.snapshot.ChildrenNode: ChildrenNode()
androidx.window.core.Version: boolean equals(java.lang.Object)
kotlin.jvm.internal.CallableReference: CallableReference()
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
androidx.collection.SparseArrayCompat: SparseArrayCompat()
com.google.android.gms.internal.measurement.zzkn: zzkn()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
androidx.window.layout.WindowInfoTracker$-CC: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
androidx.window.embedding.SplitController: boolean isSplitSupported()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void pushImage(android.media.Image)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
com.google.firebase.database.core.utilities.TreeNode: TreeNode()
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute()
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
kotlin.jvm.internal.FunctionReference: boolean isInline()
androidx.window.embedding.SplitRule: int hashCode()
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
com.google.android.gms.measurement.internal.zzak: com.google.android.gms.measurement.internal.zzak[] values()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
androidx.window.layout.SidecarAdapter: SidecarAdapter()
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
kotlin.jvm.internal.Lambda: Lambda(int)
